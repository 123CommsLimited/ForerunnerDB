ForerunnerDB.ViewOld.js:525: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
				if (arguments.length === 0) {
				^

0 error(s), 1 warning(s)
(function(){var h=function(f){var g=f.classes.Collection,h=g.prototype.init,p=f.prototype.init,b=function(){this.init.apply(this,arguments)};b.prototype.init=function(a){var c=this;this._name=a;this._groups=[];this._listeners={};this._query={query:{},options:{}};this._onFromSetData=function(){c._onSetData.apply(c,arguments)};this._onFromInsert=function(){c._onInsert.apply(c,arguments)};this._onFromUpdate=function(){c._onUpdate.apply(c,arguments)};this._onFromRemove=function(){c._onRemove.apply(c,
arguments)}};b.prototype.on=function(a,c){this._listeners=this._listeners||{};this._listeners[a]=this._listeners[a]||[];this._listeners[a].push(c);return this};b.prototype.off=function(a,c){if(a in this._listeners){var b=this._listeners[a],e=b.indexOf(c);-1<e&&b.splice(e,1)}return this};b.prototype.emit=function(a,c){this._listeners=this._listeners||{};if(a in this._listeners){var b=this._listeners[a],e=b.length,d;for(d=0;d<e;d++)b[d].apply(this,Array.prototype.slice.call(arguments,1))}return this};
b.prototype.drop=function(){return(this._db||this._from)&&this._name?((this._debug||this._from&&this._from._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Dropping view "+this._name),this.emit("drop"),this._db&&delete this._db._views[this._name],this._from&&delete this._from._views[this._name],!0):!1};b.prototype.db=function(a){return void 0!==a?(this._db=a,this):this._db};b.prototype.from=function(a){if(void 0!==a){if("string"===typeof a)if(this._db.collectionExists(a))a=this._db.collection(a);
else throw"Invalid collection in view.from() call.";this._from!==a&&(this._from&&this.removeFrom(),this.addFrom(a));return this}return this._from};b.prototype.addFrom=function(a){if(this._from=a)return this._from.on("setData",this._onFromSetData),this._from.on("insert",this._onFromInsert),this._from.on("update",this._onFromUpdate),this._from.on("remove",this._onFromRemove),this._from._addView(this),this._primaryKey=this._from._primaryKey,this.refresh(),this;throw"Cannot determine collection type in view.from()";
};b.prototype.removeFrom=function(){this._from.off("setData",this._onFromSetData);this._from.off("insert",this._onFromInsert);this._from.off("update",this._onFromUpdate);this._from.off("remove",this._onFromRemove);this._from._removeView(this)};b.prototype.primaryKey=function(){if(this._from)return this._from.primaryKey()};b.prototype.query=function(a,c,b){void 0!==a&&(this._query.query=a);void 0!==c&&(this._query.options=c);return void 0!==a||void 0!==c?((void 0===b||!0===b)&&this.refresh(),this):
this._query};b.prototype.queryAdd=function(a,c,b){var e=this._query.query,d;if(void 0!==a)for(d in a)if(a.hasOwnProperty(d)&&(void 0===e[d]||void 0!==e[d]&&c))e[d]=a[d];(void 0===b||!0===b)&&this.refresh()};b.prototype.queryRemove=function(a,c){var b=this._query.query,e;if(void 0!==a)for(e in a)a.hasOwnProperty(e)&&delete b[e];(void 0===c||!0===c)&&this.refresh()};b.prototype.queryObj=function(a,c){return void 0!==a?(this._query.query=a,(void 0===c||!0===c)&&this.refresh(),this):this._query.query};
b.prototype.queryOptions=function(a,c){return void 0!==a?(this._query.options=a,(void 0===c||!0===c)&&this.refresh(),this):this._query.options};b.prototype.refresh=function(a){var c=this._data,b,e,d,f,k,l=[],g=[],n=[],h=!1,m;if(this._debug||this._db&&this._db._debug)console.log("ForerunnerDB.View: Refreshing view "+this._name),console.log("ForerunnerDB.View: Existing data: "+("undefined"!==typeof this._data)),"undefined"!==typeof this._data&&console.log("ForerunnerDB.View: Current data rows: "+this._data.find().length);
this._from&&(this._query?((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: View has query and options, getting subset..."),this._data=this._from.subset(this._query.query,this._query.options)):this._query.options?((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: View has options, getting subset..."),this._data=this._from.subset({},this._query.options)):((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: View has no query or options, getting subset..."),
this._data=this._from.subset({})));if(!a&&c)if((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Refresh not forced, old data detected..."),e=this._data,c.subsetOf()===e.subsetOf()){(this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Old and new data are from same collection...");d=e.find();a=c.find();f=e._primaryKey;for(m=0;m<d.length;m++)k=d[m],b={},b[f]=k[f],(b=c.find(b)[0])?JSON.stringify(b)!==JSON.stringify(k)&&g.push(k):l.push(k);for(m=0;m<a.length;m++)k=
a[m],b={},b[f]=k[f],e.find(b)[0]||n.push(k);if(this._debug||this._db&&this._db._debug)console.log("ForerunnerDB.View: Removed "+n.length+" rows"),console.log("ForerunnerDB.View: Inserted "+l.length+" rows"),console.log("ForerunnerDB.View: Updated "+g.length+" rows");l.length&&(this._onInsert(l,[]),h=!0);g.length&&(this._onUpdate(g,[]),h=!0);n.length&&(this._onRemove(n,[]),h=!0);h&&((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Emitting change event with data",d),this.emit("change",
{data:d}))}else(this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Old and new data are from different collections..."),n=c.find(),n.length&&this._onRemove(n),l=e.find(),l.length&&this._onInsert(l),(this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Emitting change event with data",d),this.emit("change",{data:l});else(this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Forcing data update",d),this._data&&(d=this._data.find(this._query.query,
this._query.options),(this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Emitting change event with data",d),this._onInsert(d,[]),this.emit("change",{data:d}));return this};b.prototype.count=function(){return this._data&&this._data._data?this._data._data.length:0};b.prototype.find=function(){return this._data?((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Finding data in view collection...",this._data),this._data.find()):[]};b.prototype.insert=function(){return this._from?
this._from.insert.apply(this._from,arguments):[]};b.prototype.update=function(){return this._from?this._from.update.apply(this._from,arguments):[]};b.prototype.remove=function(){return this._from?this._from.remove.apply(this._from,arguments):[]};b.prototype._onSetData=function(a,b){this.emit("remove",b,[]);this.emit("insert",a,[])};b.prototype._onInsert=function(a,b){this.emit("insert",a,b)};b.prototype._onUpdate=function(a,b){this.emit("update",a,b)};b.prototype._onRemove=function(a,b){this.emit("remove",
a,b)};g.prototype.init=function(){this._views=[];h.apply(this,arguments)};g.prototype._addView=function(a){void 0!==a&&(this._views[a._name]=a);return this};g.prototype._removeView=function(a){void 0!==a&&delete this._views[a._name];return this};f.prototype.init=function(){this._views={};p.apply(this,arguments)};f.prototype.view=function(a){this._views[a]||this._debug&&console.log("ForerunnerDB.View: Creating view "+a);this._views[a]=this._views[a]||(new b(a)).db(this);return this._views[a]};f.prototype.viewExists=
function(a){return Boolean(this._views[a])};f.prototype.views=function(){var a=[],b;for(b in this._views)this._views.hasOwnProperty(b)&&a.push({name:b,count:this._views[b].count()});return a};f.classes.View=b};"function"===typeof define&&define.amd?define(["require","../ForerunnerDB","./ForerunnerDB.CollectionGroup"],function(f,g){console.log("Exec View");return h(g)}):h(ForerunnerDB)})();
