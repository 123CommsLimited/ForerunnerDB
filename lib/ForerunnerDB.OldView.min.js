(function(){var q=function(e){var k=e.classes.Collection,p=e.classes.CollectionGroup,q=k.prototype.init,s=p.prototype.init,t=e.prototype.init,r=e.classes.Overload,c=function(){this.init.apply(this,arguments)};c.prototype.init=function(a){var b=this;this._name=a;this._groups=[];this._listeners={};this._query={query:{},options:{}};this._onFromSetData=function(){b._onSetData.apply(b,arguments)};this._onFromInsert=function(){b._onInsert.apply(b,arguments)};this._onFromUpdate=function(){b._onUpdate.apply(b,
arguments)};this._onFromRemove=function(){b._onRemove.apply(b,arguments)};this._onFromChange=function(){(this._debug||this._db&&this._db._debug)&&console.log("View: received change");b._onChange.apply(b,arguments)}};c.prototype.on=new r([function(a,b){this._listeners=this._listeners||{};this._listeners[a]=this._listeners[a]||{};this._listeners[a]["*"]=this._listeners[a]["*"]||[];this._listeners[a]["*"].push(b);return this},function(a,b,f){this._listeners=this._listeners||{};this._listeners[a]=this._listeners[a]||
{};this._listeners[a][b]=this._listeners[a][b]||[];this._listeners[a][b].push(f);return this}]);c.prototype.off=new r([function(a){this._listeners&&(this._listeners[a]&&a in this._listeners)&&delete this._listeners[a];return this},function(a,b){var f,c;"string"===typeof b?this._listeners&&(this._listeners[a]&&this._listeners[a][b])&&delete this._listeners[a][b]:a in this._listeners&&(f=this._listeners[a]["*"],c=f.indexOf(b),-1<c&&f.splice(c,1));return this},function(a,b,f){this._listeners&&a in this._listeners&&
(a=this._listeners[a][b],f=a.indexOf(f),-1<f&&a.splice(f,1))}]);c.prototype.emit=function(a,b){this._listeners=this._listeners||{};if(a in this._listeners){if(this._listeners[a]["*"]){var f=this._listeners[a]["*"],c=f.length,d;for(d=0;d<c;d++)f[d].apply(this,Array.prototype.slice.call(arguments,1))}if(b instanceof Array&&b[0]&&b[0][this._primaryKey]){var f=this._listeners[a],e,h,c=b.length;for(d=0;d<c;d++)if(f[b[d][this._primaryKey]]){e=f[b[d][this._primaryKey]].length;for(h=0;h<e;h++)f[b[d][this._primaryKey]][h].apply(this,
Array.prototype.slice.call(arguments,1))}}}return this};c.prototype.drop=function(){return(this._db||this._from)&&this._name?((this._debug||this._from&&this._from._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Dropping view "+this._name),this.emit("drop"),this._db&&delete this._db._oldViews[this._name],this._from&&delete this._from._oldViews[this._name],!0):!1};c.prototype.db=function(a){return void 0!==a?(this._db=a,this):this._db};c.prototype.from=function(a){if(void 0!==a){if("string"===
typeof a)if(this._db.collectionExists(a))a=this._db.collection(a);else throw"Invalid collection in view.from() call.";this._from!==a&&(this._from&&this.removeFrom(),this.addFrom(a));return this}return this._from};c.prototype.addFrom=function(a){if(this._from=a)return this._from.on("setData",this._onFromSetData),this._from.on("change",this._onFromChange),this._from._addOldView(this),this._primaryKey=this._from._primaryKey,this.refresh(),this;throw"Cannot determine collection type in view.from()";};
c.prototype.removeFrom=function(){this._from.off("setData",this._onFromSetData);this._from.off("change",this._onFromChange);this._from._removeOldView(this)};c.prototype.primaryKey=function(){if(this._from)return this._from.primaryKey()};c.prototype.queryData=function(a,b,c){void 0!==a&&(this._query.query=a);void 0!==b&&(this._query.options=b);return void 0!==a||void 0!==b?((void 0===c||!0===c)&&this.refresh(),this):this._query};c.prototype.queryAdd=function(a,b,c){var g=this._query.query,d;if(void 0!==
a)for(d in a)if(a.hasOwnProperty(d)&&(void 0===g[d]||void 0!==g[d]&&b))g[d]=a[d];(void 0===c||!0===c)&&this.refresh()};c.prototype.queryRemove=function(a,b){var c=this._query.query,g;if(void 0!==a)for(g in a)a.hasOwnProperty(g)&&delete c[g];(void 0===b||!0===b)&&this.refresh()};c.prototype.query=function(a,b){return void 0!==a?(this._query.query=a,(void 0===b||!0===b)&&this.refresh(),this):this._query.query};c.prototype.queryOptions=function(a,b){return void 0!==a?(this._query.options=a,(void 0===
b||!0===b)&&this.refresh(),this):this._query.options};c.prototype.refresh=function(a){if(this._from){var b=this._data,c,g,d,e,h,m=[],k=[],n=[],l;if(this._debug||this._db&&this._db._debug)console.log("ForerunnerDB.View: Refreshing view "+this._name),console.log("ForerunnerDB.View: Existing data: "+("undefined"!==typeof this._data)),"undefined"!==typeof this._data&&console.log("ForerunnerDB.View: Current data rows: "+this._data.find().length);this._query?((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: View has query and options, getting subset..."),
this._data=this._from.subset(this._query.query,this._query.options)):this._query.options?((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: View has options, getting subset..."),this._data=this._from.subset({},this._query.options)):((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: View has no query or options, getting subset..."),this._data=this._from.subset({}));if(!a&&b)if((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Refresh not forced, old data detected..."),
g=this._data,b.subsetOf()===g.subsetOf()){(this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Old and new data are from same collection...");d=g.find();a=b.find();e=g._primaryKey;for(l=0;l<d.length;l++)h=d[l],c={},c[e]=h[e],(c=b.find(c)[0])?JSON.stringify(c)!==JSON.stringify(h)&&k.push(h):m.push(h);for(l=0;l<a.length;l++)h=a[l],c={},c[e]=h[e],g.find(c)[0]||n.push(h);if(this._debug||this._db&&this._db._debug)console.log("ForerunnerDB.View: Removed "+n.length+" rows"),console.log("ForerunnerDB.View: Inserted "+
m.length+" rows"),console.log("ForerunnerDB.View: Updated "+k.length+" rows");m.length&&this._onInsert(m,[]);k.length&&this._onUpdate(k,[]);n.length&&this._onRemove(n,[])}else(this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Old and new data are from different collections..."),n=b.find(),n.length&&this._onRemove(n),m=g.find(),m.length&&this._onInsert(m);else(this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Forcing data update",d),this._data=this._from.subset(this._query.query,
this._query.options),d=this._data.find(),(this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Emitting change event with data",d),this._onInsert(d,[]);(this._debug||this._db&&this._db._debug)&&console.log("View: emitting change");this.emit("change")}return this};c.prototype.count=function(){return this._data&&this._data._data?this._data._data.length:0};c.prototype.find=function(){return this._data?((this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Finding data in view collection...",
this._data),this._data.find.apply(this._data,arguments)):[]};c.prototype.insert=function(){return this._from?this._from.insert.apply(this._from,arguments):[]};c.prototype.update=function(){return this._from?this._from.update.apply(this._from,arguments):[]};c.prototype.remove=function(){return this._from?this._from.remove.apply(this._from,arguments):[]};c.prototype._onSetData=function(a,b){this.emit("remove",b,[]);this.emit("insert",a,[])};c.prototype._onInsert=function(a,b){this.emit("insert",a,b)};
c.prototype._onUpdate=function(a,b){this.emit("update",a,b)};c.prototype._onRemove=function(a,b){this.emit("remove",a,b)};c.prototype._onChange=function(){(this._debug||this._db&&this._db._debug)&&console.log("View: refreshing data");this.refresh()};k.prototype.init=function(){this._oldViews=[];q.apply(this,arguments)};k.prototype._addOldView=function(a){void 0!==a&&(this._oldViews[a._name]=a);return this};k.prototype._removeOldView=function(a){void 0!==a&&delete this._oldViews[a._name];return this};
p.prototype.init=function(){this._oldViews=[];s.apply(this,arguments)};p.prototype._addOldView=function(a){void 0!==a&&(this._oldViews[a._name]=a);return this};p.prototype._removeOldView=function(a){void 0!==a&&delete this._oldViews[a._name];return this};e.prototype.init=function(){this._oldViews={};t.apply(this,arguments)};e.prototype.oldView=function(a){this._oldViews[a]||(this._debug||this._db&&this._db._debug)&&console.log("ForerunnerDB.View: Creating view "+a);this._oldViews[a]=this._oldViews[a]||
(new c(a)).db(this);return this._oldViews[a]};e.prototype.oldViewExists=function(a){return Boolean(this._oldViews[a])};e.prototype.oldViews=function(){var a=[],b;for(b in this._oldViews)this._oldViews.hasOwnProperty(b)&&a.push({name:b,count:this._oldViews[b].count()});return a};e.classes.OldView=c};"function"===typeof define&&define.amd?define(["require","../ForerunnerDB","./ForerunnerDB.CollectionGroup"],function(e,k){return q(k)}):q(ForerunnerDB)})();
