(function(){var f=function(g){g.prototype.Plugin.Persist=function(){var c=function(){this.init.apply(this,arguments)};c.prototype.init=function(a){a.isClient()&&"undefined"!==typeof Storage&&this.mode("localStorage")};c.prototype.mode=function(a){return void 0!==a?(this._mode=a,this):this._mode};c.prototype.save=function(a,b,d){switch(this.mode()){case "localStorage":b="object"===typeof b?"json::fdb::"+JSON.stringify(b):"raw::fdb::"+b,localStorage.setItem(a,b),d&&d(!1)}d&&d("No data handler.")};c.prototype.load=
function(a,b){var d,c;switch(this.mode()){case "localStorage":if(d=localStorage.getItem(a)){d=d.split("::fdb::");switch(d[0]){case "json":c=JSON.parse(d[1]);break;case "raw":c=d[1]}b&&b(!1,c)}}b&&b("No data handler or unrecognised data type.")};c.prototype.drop=function(a,b){switch(this.mode()){case "localStorage":localStorage.removeItem(a),b&&b(!1)}b&&b("No data handler or unrecognised data type.")};var e=g.classes.Collection,f=e.prototype.drop;e.prototype.drop=function(a){if(a)if(this._name)if(this._db)this._db.persist.drop(this._name);
else return callback&&callback("Cannot drop a collection's persistent storage when the collection is not attached to a database!"),"Cannot drop a collection's persistent storage when the collection is not attached to a database!";else return callback&&callback("Cannot drop a collection's persistent storage when no name assigned to collection!"),"Cannot drop a collection's persistent storage when no name assigned to collection!";f.apply(this)};e.prototype.save=function(a){if(this._name)if(this._db)this._db.persist.save(this._name,
this._data);else return a&&a("Cannot save a collection that is not attached to a database!"),"Cannot save a collection that is not attached to a database!";else return a&&a("Cannot save a collection with no assigned name!"),"Cannot save a collection with no assigned name!"};e.prototype.load=function(a){var b=this;if(this._name)if(this._db)this._db.persist.load(this._name,function(d,c){if(d)return a&&a(d),d;c&&b.setData(c);a&&a(!1)});else return a&&a("Cannot load a collection that is not attached to a database!"),
"Cannot load a collection that is not attached to a database!";else return a&&a("Cannot load a collection with no assigned name!"),"Cannot load a collection with no assigned name!"};return c}()};"function"===typeof define&&define.amd?define(["require","../ForerunnerDB"],function(g,c){return f(c)}):f(ForerunnerDB)})();
