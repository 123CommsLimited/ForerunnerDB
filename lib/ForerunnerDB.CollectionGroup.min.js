(function(){var f=function(d){var e=d.classes.Collection,f=d.prototype.init,b=function(){this.init.apply(this,arguments)};b.prototype.init=function(a){var c=this;this._name=a;this._collectionArr=[];this._views=[];this._onCollectionInsert=function(){c._onInsert.apply(c,arguments)};this._onCollectionUpdate=function(){c._onUpdate.apply(c,arguments)};this._onCollectionRemove=function(){c._onRemove.apply(c,arguments)};this._onCollectionChange=function(){c._onChange.apply(c,arguments)}};b.prototype.on=
function(a,c){this._listeners=this._listeners||{};this._listeners[a]=this._listeners[a]||[];this._listeners[a].push(c);return this};b.prototype.off=function(a,c){if(a in this._listeners){var g=this._listeners[a],b=g.indexOf(c);-1<b&&g.splice(b,1)}return this};b.prototype.emit=function(a,c){this._listeners=this._listeners||{};if(a in this._listeners){var b=this._listeners[a],d=b.length,e;for(e=0;e<d;e++)b[e].apply(this,Array.prototype.slice.call(arguments,1))}return this};b.prototype.db=function(a){return void 0!==
a?(this._db=a,this):this._db};b.prototype.addCollection=function(a){if(a&&-1===this._collectionArr.indexOf(a)){if(this._collectionArr.length){if(this._primaryKey!==a.primaryKey())throw"All collections in a collection group must have the same primary key!";}else this._primaryKey=a.primaryKey();this._collectionArr.push(a);a._groups.push(this);a.on("insert",this._onCollectionInsert);a.on("update",this._onCollectionUpdate);a.on("remove",this._onCollectionRemove);a.on("change",this._onCollectionChange)}return this};
b.prototype.removeCollection=function(a){if(a){var c=this._collectionArr.indexOf(a);-1!==c&&(a.off("insert",this._onCollectionInsert),a.off("update",this._onCollectionUpdate),a.off("remove",this._onCollectionRemove),a.off("change",this._onCollectionChange),this._collectionArr.splice(c,1),c=a._groups.indexOf(this),-1!==c&&a._groups.splice(c,1));0===this._collectionArr.length&&delete this._primaryKey}return this};b.prototype.find=function(a,c){var b=(new e).primaryKey(this._collectionArr[0].primaryKey()),
d;for(d=0;d<this._collectionArr.length;d++)b.insert(this._collectionArr[d].find(a));return b.find(a,c)};b.prototype.insert=function(a,c){for(var b=0;b<this._collectionArr.length;b++)this._collectionArr[b].insert(a,c)};b.prototype.update=function(a,c){for(var b=0;b<this._collectionArr.length;b++)this._collectionArr[b].update(a,c)};b.prototype.updateById=function(a,c){for(var b=0;b<this._collectionArr.length;b++)this._collectionArr[b].updateById(a,c)};b.prototype.remove=function(a){for(var c=0;c<this._collectionArr.length;c++)this._collectionArr[c].remove(a)};
b.prototype.removeById=function(a){for(var c=0;c<this._collectionArr.length;c++)this._collectionArr[c].removeById(a)};b.prototype._addView=function(a){void 0!==a&&(this._views[a._name]=a);return this};b.prototype._removeView=function(a){void 0!==a&&delete this._views[a._name];return this};b.prototype._onInsert=function(a,c){this.emit("insert",a,c)};b.prototype._onUpdate=function(a,c){this.emit("update",a,c)};b.prototype._onRemove=function(a,c){this.emit("remove",a,c)};b.prototype._onChange=function(){this.emit("change")};
b.prototype.subset=function(a,c){var b=this.find(a,c);return(new e)._subsetOf(this).primaryKey(this._primaryKey).setData(b)};b.prototype.drop=function(){var a,b=[].concat(this._collectionArr),d=[].concat(this._views);this._debug&&console.log("Dropping collection group "+this._name);for(a=0;a<b.length;a++)this.removeCollection(b[a]);for(a=0;a<d.length;a++)this._removeView(d[a]);this.emit("drop");return!0};d.prototype.init=function(){this._collectionGroup={};f.apply(this,arguments)};d.prototype.collectionGroup=
function(a){return a?(this._collectionGroup[a]=this._collectionGroup[a]||(new b(a)).db(this),this._collectionGroup[a]):this._collectionGroup};d.classes.CollectionGroup=b};"function"===typeof define&&define.amd?define(["require","../ForerunnerDB"],function(d,e){console.log("Exec CollectionGroup");return f(e)}):f(ForerunnerDB)})();
